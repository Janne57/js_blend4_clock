{"mappings":"YAAO,IAAMA,EAAO,CAChBC,UAAWC,SAASC,cAAc,mBAClCC,QAASF,SAASC,cAAc,wBAChCE,MAAOH,SAASC,cAAc,cCH5BG,GAAW,IAAIC,MAAOC,oBAAoB,IAAI,ECC3C,SAASC,EAAcC,EAAKC,GACjC,OAAOA,EACLD,EAAM,IAAM,GAAKA,EAAM,IAAM,GACzB,EACA,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAGA,EAAM,GAAK,EAAIA,EAAM,GAAK,G,CCLhD,SAASE,EAAOC,GACnB,OAAOC,OAAOD,GAAOE,SAAS,EAAG,E,CCKrC,IAAIC,GAAa,EACbC,GAAW,EACXC,EAAa,KAGjB,SAASC,EAAWC,GAEhBF,EAAaG,aAAY,WACrB,IHZ0BC,EGYpBC,EAAchB,KAAKiB,MACSC,GHbRH,EGa0BC,EHRjD,CACLG,MALYC,KAAKC,MAAMN,EAAQ,IAAO,GAAK,GAAM,IAAMhB,EAMvDuB,QALcF,KAAKC,MAAMN,EAAO,IAAO,IAAM,GAM7CQ,QALcH,KAAKC,MAAMN,EAAO,KAAQ,KGUhCI,EAA4BD,EAA5BC,MAAOG,EAAqBJ,EAArBI,QAASC,EAAYL,EAAZK,QAChBC,EAAeL,GAAS,GAAK,KAAO,KAE1CA,EAASV,EAAaU,EAAQ,GAAKA,EAAQ,GAE3CN,EAAajB,cAAc,oBAAoB6B,YAAcpB,EAAOc,GACpEN,EAAajB,cAAc,sBAAsB6B,YAAcpB,EAAOiB,GACtET,EAAajB,cAAc,sBAAsB6B,YAAcpB,EAAOkB,GACtEV,EAAajB,cAAc,uBAAuB6B,YAAcf,EAAWc,EAAe,GAG1FX,EAAajB,cAAc,oBAAoB8B,QAAQC,MACrDzB,EAAciB,EAAO,CAAC,SAAgB,SAAgB,UACvCN,EAAJjB,cAAc,sBAAsB8B,QAAQC,MACvDzB,EAAcoB,EAAS,CAAC,UAAkB,UAAkB,WAC1CT,EAAPjB,cAAc,sBAAsB8B,QAAQC,MACvDzB,EAAcqB,EAAS,CAAC,UAAkB,UAAkB,U,GACjD,I,CAsBA,SAASK,IACZnC,EAAKK,MAAM+B,UAAUC,IAAI,aACzBrC,EAAKI,QAAQD,cAAc,YAAYiC,UAAUE,OAAO,aACxDtC,EAAKI,QAAQD,cAAc,YAAYiC,UAAUC,IAAI,aACrDrC,EAAKI,QAAQD,cAAc,cAAciC,UAAUC,IAAI,aApBnDE,cAAcrB,E,CCjCpClB,EAAKI,QAAQoC,iBAAiB,SAE9B,SAAsBC,GAElB,GAAIA,EAAIC,OAAOC,QAAQ,cAEnB,YD+B8E,UAAhE3C,EAAKI,QAAQD,cAAc,cAAc6B,YAAYY,QACrD5C,EAAKI,QAAQD,cAAc,cAAc6B,YAAc,WACvDhB,GAAa,EACbC,GAAW,IAEXjB,EAAKI,QAAQD,cAAc,cAAc6B,YAAc,QACvDhB,GAAa,EACbC,GAAW,ICnC7B,GAAIwB,EAAIC,OAAOC,QAAQ,YAEnB,YADAR,IDgDUhB,EAAWnB,EAAKC,WAChB4C,YAAW,WACX7C,EAAKK,MAAM+B,UAAUE,OAAO,aAC5BtC,EAAKI,QAAQD,cAAc,YAAYiC,UAAUC,IAAI,aACrDrC,EAAKI,QAAQD,cAAc,YAAYiC,UAAUE,OAAO,aACxDtC,EAAKI,QAAQD,cAAc,cAAciC,UAAUE,OAAO,Y,GACvD,I","sources":["src/js/refs.js","src/js/helpers/getTimeComponents.js","src/js/helpers/declensionNum.js","src/js/helpers/addPad.js","src/js/helpers/btnFunctions.js","src/js/clock.js"],"sourcesContent":["export const refs = {\n    clockItem: document.querySelector('.js-clock-items'),\n    buttons: document.querySelector('.js-buttons__wrapper'),\n    clock: document.querySelector('.js-clock'),\n};","const timeZone = new Date().getTimezoneOffset()/60*(-1);\n\nexport function getTimeComponents(time) {\n    const hours = Math.floor((time / 1000 / 60 / 60) % 24) + timeZone;\n    const minutes = Math.floor(time / 1000 / 60) % 60;\n    const seconds = Math.floor(time / 1000) % 60;\n  \n    return {\n      hours,\n      minutes,\n      seconds,\n    };\n  }","\n  export function declensionNum(num, words) {\n    return words[\n      num % 100 > 4 && num % 100 < 20\n        ? 2\n        : [2, 0, 1, 1, 1, 2][num % 10 < 5 ? num % 10 : 5]\n    ];\n  }","export function addPad(value) {\n    return String(value).padStart(2, 0);\n  }\n","import {refs} from '../refs.js'\nimport {getTimeComponents} from './getTimeComponents.js'\nimport {declensionNum} from './declensionNum.js'\nimport {addPad} from './addPad.js'\n\n\nlet formatTime = false;\nlet showAmPm = false;\nlet intervalId = null;\n\n\nfunction startClock(rootSelector) {\n\n    intervalId = setInterval(() => {\n        const currentTime = Date.now();\n        let { hours, minutes, seconds } = getTimeComponents(currentTime);\n        const timeZoneName = hours >= 12 ? \"PM\" : \"AM\";\n    \n        hours  = formatTime ? hours % 12 : hours % 24;\n    \n        rootSelector.querySelector('.js-clock__hours').textContent = addPad(hours);\n        rootSelector.querySelector('.js-clock__minutes').textContent = addPad(minutes);\n        rootSelector.querySelector('.js-clock__seconds').textContent = addPad(seconds);    \n        rootSelector.querySelector('.js-clock__timezone').textContent = showAmPm ? timeZoneName : '';\n    \n        //\n        rootSelector.querySelector('.js-clock__hours').dataset.title =\n          declensionNum(hours, ['година', 'години', 'годин']);\n        rootSelector.querySelector('.js-clock__minutes').dataset.title =\n          declensionNum(minutes, ['хвилина', 'хвилини', 'хвилин']);\n        rootSelector.querySelector('.js-clock__seconds').dataset.title =\n          declensionNum(seconds, ['секунда', 'секунди', 'секунд']);\n    }, 1000);    \n    \n    };\n\n\nfunction stopClock() {\n        clearInterval(intervalId);\n        };\n        \nexport function onChangeBthClick () {\n    if (refs.buttons.querySelector('.js-change').textContent.trim() === 'AM/PM') {\n        refs.buttons.querySelector('.js-change').textContent = '24 hours' \n        formatTime = true;\n        showAmPm = true;\n    } else {\n        refs.buttons.querySelector('.js-change').textContent = 'AM/PM' \n        formatTime = false;\n        showAmPm = false;\n    }\n    \n};\n\nexport function onHideBtnClick() {\n    refs.clock.classList.add('is-hidden');\n    refs.buttons.querySelector('.js-show').classList.remove('is-hidden');\n    refs.buttons.querySelector('.js-hide').classList.add('is-hidden');\n    refs.buttons.querySelector('.js-change').classList.add('is-hidden');\n    stopClock(); \n};\n\nexport function showBtnClic() {\n    startClock(refs.clockItem);\n    setTimeout(() => {\n    refs.clock.classList.remove('is-hidden');\n    refs.buttons.querySelector('.js-show').classList.add('is-hidden');\n    refs.buttons.querySelector('.js-hide').classList.remove('is-hidden');\n    refs.buttons.querySelector('.js-change').classList.remove('is-hidden');\n    }, 1000);\n};\n","import {onChangeBthClick} from './helpers/btnFunctions.js'\nimport {onHideBtnClick} from './helpers/btnFunctions.js'\nimport {showBtnClic} from './helpers/btnFunctions.js'\nimport {refs} from './refs.js'\n\nrefs.buttons.addEventListener('click', onBtnsClick);\n\nfunction onBtnsClick (evt) {\n    \n    if (evt.target.matches('.js-change')) {\n        onChangeBthClick();\n        return;\n    }\n\n    if (evt.target.matches('.js-hide')) {\n        onHideBtnClick();\n        return;\n    }\n\n    showBtnClic();\n};\n"],"names":["$37e33676934ad046$export$21666b427502ea6d","clockItem","document","querySelector","buttons","clock","$03e253e3927afe30$var$timeZone","Date","getTimezoneOffset","$a27feec0c53e2ce0$export$72ccfa8c87f84ff8","num","words","$fea59916eba6e6c7$export$683b33b4ba13994c","value","String","padStart","$2a4e1244fdace620$var$formatTime","$2a4e1244fdace620$var$showAmPm","$2a4e1244fdace620$var$intervalId","$2a4e1244fdace620$var$startClock","rootSelector","setInterval","time","currentTime","now","ref","hours","Math","floor","minutes","seconds","timeZoneName","textContent","dataset","title","$2a4e1244fdace620$export$3eaaf97efb53a624","classList","add","remove","clearInterval","addEventListener","evt","target","matches","trim","setTimeout"],"version":3,"file":"index.38245476.js.map"}